name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  build_and_push:
    runs-on: ubuntu-latest
    name: Build and push docker image
    needs: lint
    outputs:
      commit_hash: latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: bohdanshlyah/flask-api:latest

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build_and_push
    env:
      HOST: ${{ matrix.host }}
      HOST1: ${{ secrets.HOST1 }}
      HOST2: ${{ secrets.HOST2 }}
      USERNAME: ${{ secrets.USERNAME }}
    strategy:
      matrix:
        host: [$HOST1, $HOST2] #3.71.199.254 3.68.167.230
    steps:
      - name: Deploy to EC2 instanse via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: ${{ secrets.DOCKERHUB_USERNAME }}, ${{ secrets.DOCKERHUB_TOKEN }}
          port: 22
          script: |
            cd ${{ secrets.PROJECT_PATH }}

            # login docker
            sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN

            sudo docker-compose stop

            sudo docker-compose rm

            sudo docker-compose up -d

    helth_check:
      runs-on: ubuntu-latest
      name: API operation check
      needs: deploy
      env:
        HOST1: ${{ secrets.HOST1 }}
        HOST2: ${{ secrets.HOST2 }}
      steps:
        - name: Get answer from host1
          run: curl $HOST1:5000
          id: host1_answer
      
        - name: Get answer from host2
          run: curl $HOST2:5000
          id: host2_answer
        
        - name: HOST1 - Status OK!
          if: ${{ steps.host1_answer.outputs }} == "Hello from students API"
       
        - name: HOST2 - Status OK!
          if: ${{ steps.host2_answer.outputs }} == "Hello from students API"